{% extends 'partials/main.html.twig' %}

{% block stylesheets %}

{{ parent() }}

<!-- jsvectormap css -->
<link href="{{ asset('libs/jsvectormap/css/jsvectormap.min.css') }}" rel="stylesheet" type="text/css" />

<!--Swiper slider css-->
<link href="{{ asset('libs/swiper/swiper-bundle.min.css') }}" rel="stylesheet" type="text/css" />

{% endblock %}

{% block content %}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card" id="customerList">

                <div class="card-header align-items-center d-flex">
                    <h4 class="card-title mb-0 flex-grow-1 text-uppercase">
                        Agregar Cliente
                    </h4>
                    <div class="d-flex align-items-center">
                        <a href=" {{ path("app_secure_customer") }} "><i class=" ri-arrow-go-back-line px-1 "></i>Volver</a>
                        
                    </div>
                </div>
    
                <div class=" card-body " >
                    {{ form_start (clientForm, {attr: { 'data-turbo': 'false' } }) }}

                    <div>
                        {{ form_row (clientForm.name) }}
                    </div>
                    <div class=" row">
                            <div class="col-xl-6">
                                {{ form_row (clientForm.typeDocument) }}
                            </div>
                            <div class="col-xl-6">
                                {{ form_row (clientForm.document) }}
                            </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-6">
                            {{ form_row (clientForm.email) }}
                        </div>
                        <div class="col-xl-6">
                            {{ form_row (clientForm.telephone) }}
                        </div>
                    </div>

                    <div class="card-header align-items-center d-flex mb-1">
                        <h4 class="card-title mb-0 flex-grow-1 text-uppercase">
                            Dirección
                        </h4>
                    </div>
                    <div id="client_addresses_container" data-prototype="{{ form_row(clientForm.clientAddresses.vars.prototype)|e('html_attr') }}">
                        {% for clientAddress in clientForm.clientAddresses %}
                        <div class="client-address-item">
                            <div class="row">
                                <div>
                                    {{ form_row(clientAddress.country) }}
                                </div>
                                <div>
                                    {{ form_row(clientAddress.province) }}
                                </div>
                                <div>
                                    {{ form_row(clientAddress.state) }}
                                </div>
                            </div>
                            <div class="row">
                                <div>
                                    {{ form_row(clientAddress.address) }}
                                </div>
                                <div>
                                    {{ form_row(clientAddress.zipCode) }}
                                </div>
                            </div>
                            <div>
                                {{ form_row(clientAddress.additionalInformation) }}
                            </div>
                            <button type="button" class="btn btn-danger btn-remove-address mt-2">Eliminar</button>
                        </div>
                        <hr>
                        {% endfor %}
                    </div>
                    <button type="button" id="btn-add-address" class="btn btn-primary mt-2 mb-2">Agregar dirección</button>
                    
                    {{ form_end(clientForm)}}
                </div>
            </div>
        </div>
    </div>
</div>




</div>

{% endblock %}

{% block javascripts %}

{{ parent() }}
<script>
    $(document).ready(() => {

        initDataTable();
    })

    const initDataTable = () => {
        let table = new DataTable('#clientTable', {
            responsive: true,
            language: {
                url: '//cdn.datatables.net/plug-ins/2.1.5/i18n/es-MX.json',
            },
        });
    }

</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const container = document.querySelector('#client_addresses_container');
        const addButton = document.querySelector('#btn-add-address');
        const getAddressItems = () => container.querySelectorAll('.client-address-item');

        addButton.addEventListener('click', () => {
            const currentItems = getAddressItems();
            let index = currentItems.length; // Índice para los nuevos elementos
            console.log(`Número actual de elementos: ${getAddressItems().length}`);

            if (index <= 4) {

                const prototype = container.dataset.prototype;
        const newForm = prototype.replace(/__name__/g, index);

        const newElement = document.createElement('div');
        newElement.classList.add('client-address-item');
        newElement.innerHTML = newForm;

        const deleteButton = document.createElement('button');
        deleteButton.type = 'button';
        deleteButton.classList.add('btn', 'btn-danger', 'btn-remove-address', 'mt-1', 'mb-2');
        deleteButton.textContent = 'Eliminar';
        const hr = document.createElement('hr');
        newElement.appendChild(hr);

        deleteButton.addEventListener('click', () => {
    // Mostrar alerta de confirmación con SweetAlert
    Swal.fire({
        title: '¿Estás seguro?',
        text: 'Esta acción eliminará la dirección.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, eliminar',
        cancelButtonText: 'Cancelar',
    }).then((result) => {
        if (result.isConfirmed) {
            // Eliminar el elemento si el usuario confirma
            newElement.remove();

            // Mostrar notificación de éxito
            Swal.fire({
                icon: 'success',
                title: 'Eliminado',
                text: 'La dirección ha sido eliminada con éxito.',
                timer: 2000,
                showConfirmButton: false,
            });
        }
    });
});

        newElement.appendChild(deleteButton);
        container.appendChild(newElement);
            } else {
                Swal.fire({
                icon: 'error',
                title: 'Límite alcanzado',
                text: 'No puedes agregar más de 5 direcciones.',
            });
            return;
            }
        });

        getAddressItems().forEach(item => {
        const removeButton = item.querySelector('.btn-remove-address');
        if (removeButton) {
            removeButton.addEventListener('click', () => item.remove());
        }
    });
    });

</script>

<!-- apexcharts -->
<script src="{{ asset('libs/apexcharts/apexcharts.min.js') }}"></script>

<!-- Dashboard init -->
<script src="{{ asset('js/pages/dashboard-crm.init.js') }}"></script>


{% endblock %}