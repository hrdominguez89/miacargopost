{% extends 'partials/main.html.twig' %}

{% set title = 'Calendario de tareas' %}

{% block stylesheets %}

    {{ parent() }}

    <!-- fullcalendar css -->
    <link href="{{ asset('libs/fullcalendar/main.min.css') }}" rel="stylesheet" type="text/css"/>

{% endblock %}

{% block content %}

    {{ include('partials/page-title.html.twig', {title: title, page: 'calendario de tareas'}) }}

    <div class="row">
        <div class="col-12">
            <div class="row">
                <div class="col-xl-3">
                    <div class="card card-h-100">
                        <div class="card-body">
                            <button class="btn btn-primary w-100" id="btn-new-event" disabled>
                                <i class="mdi mdi-plus"></i> Crear Nuevo Evento
                            </button>

                            <div id="external-events"></div>

                        </div>
                    </div>
                    <div>
                        <h5 class="mb-1">Próximos eventos</h5>
                        <p class="text-muted">No te pierdas los eventos programados</p>
                        <div class="pe-2 me-n1 mb-3" data-simplebar style="height: 600px">
                            <div id="upcoming-event-list"></div>
                        </div>
                    </div>
                    <!--end card-->
                </div> <!-- end col-->

                <div class="col-xl-9">
                    <div class="card card-h-100">
                        <div class="card-body">
                            <div id="calendar"></div>
                        </div>
                    </div>
                </div><!-- end col -->
            </div>
            <!--end row-->

            <div style='clear:both'></div>

            <!-- Add New Event MODAL -->
            <div class="modal fade" id="event-modal" tabindex="-1">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content border-0">
                        <div class="modal-header p-3 bg-soft-info">
                            <h5 class="modal-title" id="modal-title">Evento</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>
                        </div>
                        <div class="modal-body p-4">
                            <form class="needs-validation" name="event-form" id="form-event" novalidate>
                                <div class="text-end">
                                    <a href="#" class="btn btn-sm btn-soft-primary" id="edit-event-btn"
                                       data-id="edit-event" onclick="editEvent(this)" role="button">Editar</a>
                                </div>
                                <div class="event-details">
                                    <div class="d-flex mb-2">
                                        <div class="flex-grow-1 d-flex align-items-center">
                                            <div class="flex-shrink-0 me-3">
                                                <i class="ri-calendar-event-line text-muted fs-16"></i>
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="d-block fw-semibold mb-0" id="event-start-date-tag"></h6>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-2">
                                        <div class="flex-shrink-0 me-3">
                                            <i class="ri-time-line text-muted fs-16"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <h6 class="d-block fw-semibold mb-0">
                                                <span id="event-timepicker1-tag"></span> - <span id="event-timepicker2-tag"></span>
                                            </h6>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center mb-2">
                                        <div class="flex-shrink-0 me-3">
                                            <i class="ri-map-pin-line text-muted fs-16"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <h6 class="d-block fw-semibold mb-0">
                                                <span id="event-location-tag"></span>
                                            </h6>
                                        </div>
                                    </div>
                                    <div class="d-flex mb-3">
                                        <div class="flex-shrink-0 me-3">
                                            <i class="ri-discuss-line text-muted fs-16"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <p class="d-block text-muted mb-0" id="event-description-tag"></p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row event-form">
                                    <div class="col-12">
                                        <div class="mb-3">
                                            <label class="form-label">Nivel del evento</label>
                                            <select class="form-select d-none" name="category" id="event-category"
                                                    required>
                                                <option value="primary">Normal</option>
                                                <option value="dark">Bajo</option>
                                                <option value="info">Informativo</option>
                                                <option value="danger">Importante</option>
                                            </select>
                                            <div class="invalid-feedback">Por favor seleccione una categoría válida.</div>
                                        </div>
                                    </div>
                                    <!--end col-->
                                    <div class="col-12">
                                        <div class="mb-3">
                                            <label class="form-label">Nombre del evento</label>
                                            <input class="form-control d-none" placeholder="Enter event name"
                                                   type="text" name="title" id="event-title" required value=""/>
                                            <div class="invalid-feedback">Por favor ingrese un nombre válido</div>
                                        </div>
                                    </div>
                                    <!--end col-->
                                    <div class="col-12">
                                        <div class="mb-3">
                                            <label>Fecha del evento</label>
                                            <div class="input-group d-none">
                                                <input type="text" id="event-start-date"
                                                       class="form-control flatpickr flatpickr-input"
                                                       placeholder="Seleccione una fecha" readonly required>
                                                <span class="input-group-text">
                                                    <i class="ri-calendar-event-line"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <!--end col-->
                                    <div class="col-12" id="event-time">
                                        <div class="row">
                                            <div class="col-6">
                                                <div class="mb-3">
                                                    <label class="form-label">Hora inicio</label>
                                                    <div class="input-group d-none">
                                                        <input id="timepicker1" type="text"
                                                               class="form-control flatpickr flatpickr-input"
                                                               placeholder="Seleccione hora de inicio" readonly>
                                                        <span class="input-group-text">
                                                            <i class="ri-time-line"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="mb-3">
                                                    <label class="form-label">Hora fin</label>
                                                    <div class="input-group d-none">
                                                        <input id="timepicker2" type="text"
                                                               class="form-control flatpickr flatpickr-input"
                                                               placeholder="Seleccione hora de fin" readonly>
                                                        <span class="input-group-text">
                                                            <i class="ri-time-line"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!--end col-->
                                    <div class="col-12">
                                        <div class="mb-3">
                                            <label for="event-location">Lugar</label>
                                            <div>
                                                <input type="text" class="form-control d-none" name="event-location"
                                                       id="event-location" placeholder="Lugar del evento">
                                            </div>
                                        </div>
                                    </div>
                                    <!--end col-->
                                    <input type="hidden" id="eventid" name="eventid" value=""/>
                                    <div class="col-12">
                                        <div class="mb-3">
                                            <label class="form-label">Descripción</label>
                                            <textarea class="form-control d-none" id="event-description"
                                                      placeholder="Ingrese una breve descripción" rows="3"
                                                      spellcheck="false"></textarea>
                                        </div>
                                    </div>
                                    <!--end col-->
                                </div>
                                <!--end row-->
                                <div class="hstack gap-2 justify-content-end">
                                    <button type="button" class="btn btn-soft-danger" id="btn-delete-event">
                                        <i class="ri-close-line align-bottom"></i> Eliminar
                                    </button>
                                    <button type="submit" class="btn btn-success" id="btn-save-event">Adicionar Evento</button>
                                </div>
                            </form>
                        </div>
                    </div> <!-- end modal-content-->
                </div> <!-- end modal dialog-->
            </div> <!-- end modal-->
            <!-- end modal-->
        </div>
    </div> <!-- end row-->

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <!-- calendar min js -->
    <script src="{{ asset('libs/fullcalendar/main.min.js') }}"></script>
    <script src="{{ asset('libs/fullcalendar/locales/es.js') }}"></script>

    <!-- Calendar init -->
    <script src="{{ asset('js/pages/calendar.init.js') }}"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {

            flatPickrInit();

            let addEvent = new bootstrap.Modal(document.getElementById('event-modal'), {
                keyboard: false
            });

            document.getElementById('event-modal');

            let modalTitle = document.getElementById('modal-title');
            let formEvent = document.getElementById('form-event');
            let selectedEvent = null;
            let forms = document.getElementsByClassName('needs-validation');

            /* initialize the calendar */

            let date = new Date();
            let d = date.getDate();
            let m = date.getMonth();
            let y = date.getFullYear();
            let Draggable = FullCalendar.Draggable;
            let externalEventContainerEl = document.getElementById('external-events');
            let defaultEvents = [];

            // init draggable
            new Draggable(externalEventContainerEl, {
                itemSelector: '.external-event',
                eventData: function (eventEl) {
                    return {
                        title: eventEl.innerText,
                        start: new Date(),
                        className: eventEl.getAttribute('data-class')
                    };
                }
            });

            let calendarEl = document.getElementById('calendar');

            function addNewEvent(info) {
                document.getElementById('form-event').reset();
                document.getElementById('btn-delete-event').setAttribute('hidden', "true");
                addEvent.show();
                formEvent.classList.remove("was-validated");
                formEvent.reset();
                selectedEvent = null;
                modalTitle.innerText = 'Add Event cl';

                flatpickr(start_date, {
                    defaultDate: info?.dateStr,
                    altInput: true,
                    altFormat: "j F Y",
                    dateFormat: "Y-m-d",
                    mode: "range",
                });

                document.getElementById("edit-event-btn").setAttribute("data-id", "new-event");
                document.getElementById('edit-event-btn').click();
                document.getElementById("edit-event-btn").setAttribute("hidden", "true");
            }

            function getInitialView() {
                if (window.innerWidth >= 768 && window.innerWidth < 1200) {
                    return 'timeGridWeek';
                } else if (window.innerWidth <= 768) {
                    return 'listMonth';
                } else {
                    return 'dayGridMonth';
                }
            }

            let eventCategoryChoice = new Choices("#event-category", {
                searchEnabled: false
            });

            let calendar = new FullCalendar.Calendar(calendarEl, {
                timeZone: 'local',
                locale: 'es',
                droppable: false,
                editable: true,
                selectable: true,
                nowIndicator: true,
                navLinks: false,
                dayMaxEvents: true, // allow "more" link when too many events
                initialView: getInitialView(),
                themeSystem: 'bootstrap',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                },
                events: function (date, callback) {

                    $.ajax({
                        url: '{{ path('app_reminder_index') }}',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            start: date.startStr,
                            end: date.endStr
                        },
                        success: function (doc) {

                            calendar.removeAllEvents();

                            defaultEvents = [];

                            $.map(doc, function (r) {
                                defaultEvents.push(r);
                            });

                            upcomingEvent(defaultEvents);

                            callback(defaultEvents);
                        }
                    });
                },
                windowResize: function (view) {
                    calendar.changeView(getInitialView());
                },
                eventClick: function (info) {
                    document.getElementById("edit-event-btn").removeAttribute("hidden");
                    document.getElementById('btn-save-event').setAttribute("hidden", "true");
                    document.getElementById("edit-event-btn").setAttribute("data-id", "edit-event");
                    document.getElementById("edit-event-btn").innerHTML = "Editar";

                    eventClicked();
                    flatPickrInit();
                    flatpicekrValueClear();

                    addEvent.show();
                    formEvent.reset();
                    selectedEvent = info.event;

                    // First Modal
                    document.getElementById("modal-title").innerHTML = "";
                    document.getElementById("event-location-tag").innerHTML = selectedEvent.extendedProps.location === undefined ? "No Location" : selectedEvent.extendedProps.location;
                    document.getElementById("event-description-tag").innerHTML = selectedEvent.extendedProps.description === undefined ? "No Description" : selectedEvent.extendedProps.description;

                    // Edit Modal
                    document.getElementById("event-title").value = selectedEvent.title;
                    document.getElementById("event-location").value = selectedEvent.extendedProps.location === undefined ? "No Location" : selectedEvent.extendedProps.location;
                    document.getElementById("event-description").value = selectedEvent.extendedProps.description === undefined ? "No Description" : selectedEvent.extendedProps.description;
                    document.getElementById("eventid").value = selectedEvent.id;

                    if (selectedEvent.classNames[0]) {
                        eventCategoryChoice.destroy();
                        eventCategoryChoice = new Choices("#event-category", {
                            searchEnabled: false
                        });
                        eventCategoryChoice.setChoiceByValue(selectedEvent.classNames[0]);
                    }
                    let st_date = selectedEvent.start;
                    let ed_date = selectedEvent.end;

                    let date_r = function formatDate(date) {
                        let d = new Date(date),
                            month = '' + (d.getMonth() + 1),
                            day = '' + d.getDate(),
                            year = d.getFullYear();
                        if (month.length < 2)
                            month = '0' + month;
                        if (day.length < 2)
                            day = '0' + day;
                        return [year, month, day].join('-');
                    };
                    let r_date = ed_date == null ? (str_dt(st_date)) : (str_dt(st_date)) + ' to ' + (str_dt(ed_date));
                    let er_date = ed_date == null ? (date_r(st_date)) : (date_r(st_date)) + ' to ' + (date_r(ed_date));

                    flatpickr(start_date, {
                        defaultDate: er_date,
                        altInput: true,
                        altFormat: "j F Y",
                        dateFormat: "Y-m-d",
                        mode: ed_date !== null ? "range" : "range",
                        onChange: function (selectedDates, dateStr, instance) {

                        },
                    });
                    document.getElementById("event-start-date-tag").innerHTML = r_date;

                    let gt_time = getTime(selectedEvent.start);
                    let ed_time = getTime(selectedEvent.end);

                    if (gt_time === ed_time) {
                        document.getElementById('event-time').setAttribute("hidden", "true");
                        flatpickr(document.getElementById("timepicker1"), {
                            enableTime: true,
                            noCalendar: true,
                            dateFormat: "H:i",
                        });
                        flatpickr(document.getElementById("timepicker2"), {
                            enableTime: true,
                            noCalendar: true,
                            dateFormat: "H:i",
                        });
                    } else {
                        document.getElementById('event-time').removeAttribute("hidden");
                        flatpickr(document.getElementById("timepicker1"), {
                            enableTime: true,
                            noCalendar: true,
                            dateFormat: "H:i",
                            defaultDate: gt_time
                        });

                        flatpickr(document.getElementById("timepicker2"), {
                            enableTime: true,
                            noCalendar: true,
                            dateFormat: "H:i",
                            defaultDate: ed_time
                        });
                        document.getElementById("event-timepicker1-tag").innerHTML = tConvert(gt_time);
                        document.getElementById("event-timepicker2-tag").innerHTML = tConvert(ed_time);
                    }
                    let newEventData = null;
                    modalTitle.innerText = selectedEvent.title;

                    // formEvent.classList.add("view-event");
                    document.getElementById('btn-delete-event').removeAttribute('hidden');
                },
                dateClick: function (info) {
                    addNewEvent(info);
                },
            });

            calendar.render();

            /*Add new event*/
            // Form to add new event
            formEvent.addEventListener('submit', function (ev) {

                ev.preventDefault();

                let updatedTitle = document.getElementById("event-title").value;
                let updatedCategory = document.getElementById('event-category').value;
                let event_location = document.getElementById("event-location").value;
                let eventDescription = document.getElementById("event-description").value;
                let eventid = document.getElementById("eventid").value;

                // DATE
                let dateInput = (document.getElementById("event-start-date").value).split("to");

                if (dateInput[0] === '') {
                    let d = new Date();
                    dateInput = ['' + d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + ''];
                }

                let startTime = (document.getElementById("timepicker1").value).trim();
                let endTime = (document.getElementById("timepicker2").value).trim();

                let allDay = !startTime || !endTime;

                // validation
                if (forms[0].checkValidity() === false) {
                    forms[0].classList.add('was-validated');
                } else {
                    if (selectedEvent) {
                        selectedEvent.setProp("id", eventid);
                        selectedEvent.setProp("title", updatedTitle);
                        selectedEvent.setProp("className", [updatedCategory]);
                        selectedEvent.setStart(updateStartDate);
                        selectedEvent.setEnd(updateEndDate);
                        selectedEvent.setAllDay(allDay);
                        selectedEvent.setExtendedProp("description", eventDescription);
                        selectedEvent.setExtendedProp("location", event_location);
                        let indexOfSelectedEvent = defaultEvents.findIndex(function (x) {
                            return x.id === selectedEvent.id
                        });
                        if (defaultEvents[indexOfSelectedEvent]) {
                            defaultEvents[indexOfSelectedEvent].title = updatedTitle;
                            defaultEvents[indexOfSelectedEvent].start = updateStartDate;
                            defaultEvents[indexOfSelectedEvent].end = updateEndDate;
                            defaultEvents[indexOfSelectedEvent].allDay = allDay;
                            defaultEvents[indexOfSelectedEvent].className = updatedCategory;
                            defaultEvents[indexOfSelectedEvent].description = eventDescription;
                            defaultEvents[indexOfSelectedEvent].location = event_location;
                        }
                        calendar.render();
                        // default
                    } else {

                        let newEvent = {
                            title: updatedTitle,
                            start: dateInput[0].trim(),
                            end: dateInput.length > 1 ? dateInput[1].trim() : dateInput[0].trim(),
                            timeStart: startTime,
                            timeEnd: endTime,
                            allDay: allDay,
                            className: updatedCategory,
                            description: eventDescription,
                            location: event_location
                        };

                        {#$.ajax({#}
                        {#    url: '{{ path('app_reminder_new') }}',#}
                        {#    type: 'POST',#}
                        {#    dataType: 'json',#}
                        {#    data: {'newEvent': newEvent},#}
                        {#    success: function (response) {#}

                        {#        calendar.addEvent(response);#}

                        {#        defaultEvents.push(response);#}

                        {#        upcomingEvent(defaultEvents);#}

                        {#        addEvent.hide();#}
                        {#    }#}
                        {#});#}
                    }
                }
            });

            // document.getElementById("btn-delete-event").addEventListener("click", function (e) {
            //     if (selectedEvent) {
            //         for (let i = 0; i < defaultEvents.length; i++) {
            //             if (defaultEvents[i].id === selectedEvent.id) {
            //                 defaultEvents.splice(i, 1);
            //                 i--;
            //             }
            //         }
            //         upcomingEvent(defaultEvents);
            //
            //         selectedEvent.remove();
            //         selectedEvent = null;
            //         addEvent.hide();
            //     }
            // });
            // document.getElementById("btn-new-event").addEventListener("click", function (e) {
            //
            //     flatpicekrValueClear();
            //     flatPickrInit();
            //
            //     addNewEvent();
            //
            //     document.getElementById("edit-event-btn").setAttribute("data-id", "new-event");
            //     document.getElementById('edit-event-btn').click();
            //     document.getElementById("edit-event-btn").setAttribute("hidden", "true");
            // });


            $.confirm({
                title: '',
                backgroundDismiss: false,
                useBootstrap: true,
                //backgroundDismissAnimation: 'glow',
                columnClass: 'col-md-5 col-md-offset-7 col-xs-5 col-xs-offset-7',
                content: '<lord-icon src="https://cdn.lordicon.com/inrunzby.json" trigger="loop" delay="2000" colors="primary:#ffc738,secondary:#92140c" style="width:100%;height:100%"> </lord-icon> <p style="text-align: center">Módulo desactivado, por favor contacte con su proveedor de sistema.</p>',
                buttons: {
                    OK: {
                        text: 'Salir de aquí',
                        action: function (){
                            location.href = '{{ path('app_default_index') }}';
                        }
                    }
                },
            });

        });
    </script>

{% endblock %}
